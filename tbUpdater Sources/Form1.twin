[Description("")]
[FormDesignerId("922804C1-F676-46FB-B8D1-EDA18513F6F0")]
[PredeclaredId]
Class Form1
    
    Dim loadingSettingsFromFile As Boolean
    Dim latestVersion As String
    
    Sub New()
    End Sub
    
    Private Function OptionSelection() As Integer
        
        If optOpenFolder.Value Then
            OptionSelection = 1
            
        ElseIf optOpenZip.Value Then
            OptionSelection = 2
            
        ElseIf optInstallTB.Value Then
            OptionSelection = 3

        End If
                
    End Function
        
    Private Function FoldersAreValid() As Boolean
        
        ' check to see if both folders are valid
        Return txtDownloadTo.BackColor = "&HE8C59F" And txttBLocation.BackColor = "&HE8C59F"
        
    End Function
    
    Private Sub EnableDownloadZipButton()
        
        ' should the download zip button be enabled?
        btnDownLoadZip.Enabled = FoldersAreValid And (chgLogs.LatestVersion > 0 Or btnDownLoadZip.Caption = "Check for new version")
        
        If btnDownLoadZip.Enabled Then
            ' add the final forward slash if needed
            If Right(txtDownloadTo.Text, 1) <> "\" Then txtDownloadTo.Text += "\"
            If Right(txttBLocation.Text, 1) <> "\" Then txttBLocation.Text += "\"
        End If
    End Sub
    
    Private Sub ShowStatusMessage(statMessage As String, Optional updatePreviousStatus As Boolean = False)
        
        ' write the message to the listbox on the form
        If updatePreviousStatus Then
            lbStatus.List(lbStatus.ListCount - 1) += statMessage
        Else
            statMessage = Format(Now, "MM/dd/yy hh:mm:ss AM/PM: ") & statMessage
            lbStatus.AddItem(statMessage)
        End If
        
        DoEvents()
        
    End Sub
   
    Private Function GettBParentFolder() As String
        
        Dim idx As Integer
        Dim slashCount As Integer
        
        ' loop backwards until the second \ is found - which will indicate where
        ' the parent folder for twinBASIC is
        For idx = Len(txttBLocation.Text) To 1 Step -1
            If Mid(txttBLocation.Text, idx, 1) = "\" Then slashCount += 1
            If slashCount = 2 Then Exit For
        Next
        
        ' truncate the value in the textbox holding the install folder, to get the parent folder
        GettBParentFolder = Left(txttBLocation.Text, idx)
        
    End Function
    
    Private Sub InstallTwinBasic(zipLocation As String)
        
        ' go through the steps of deleting the current files and unziping the new files
        ' to the folder that has been desgniated
        
        ' delete current files & recreate the folder
        Dim SHFileOp As SHFILEOPSTRUCT
        Dim RetVal As Long
        With SHFileOp
            .wFunc = FO_DELETE
            .pFrom = txttBLocation.Text
            .fFlags = FOF_ALLOWUNDO
        End With
        RetVal = SHFileOperation(SHFileOp)
        
        'unzip to the twinBasic folder
        With New cZipArchive
            .OpenArchive zipLocation
            .Extract txttBLocation.Text
        End With
        ' ************************** this asks for admin rights, the complete zip isn't decompressed 2-24-25
        ' timing perhaps?
        
        ' check to make sure the twinBASIC folder exists after attempted installation
        If fso.FolderExists(txttBLocation.Text) Then
            ShowStatusMessage("twinBasic from " & zipLocation & " has been extracted and is ready to use.")()
            MsgBox("twinBasic from " & zipLocation & " has been extracted and is ready to use.", vbInformation, "Completed")
        Else
            MsgBox("There was a problem recreating " & txttBLocation.Text & ". The parent folder and the zip file will be opened so that you can finish the process.", vbCritical, "Unable to complete")
            
            ShellExecute(0, "open", zipLocation, vbNullString, vbNullString, 1) ' open the zipfile for the user
            ShellExecute(0, "open", GettBParentFolder, vbNullString, vbNullString, 1) ' open the folder where twinBASIC is supposed to be installed.
            
            MsgBox("Going forward, you can open this utility as administrator to avoid this extra step.")
            
        End If
        
    End Sub
     
    Private Sub Form_Load()
        
        Me.Caption = "twinBASIC Updater (v0.8.5)" ' doing this here as setting it in the forms properties cause the proj to not launch
        
        SetupFlexGrid
        
        Me.Show
        
        ' create the file system and settings objects 
        Set fso = New FileSystemObject
        
        ' check for local html used while debugging
        If fso.FileExists(App.Path & "\GitHubReleasesPage.html") Then
            ShowStatusMessage "******* using local html file **************"
        End If
        
        ' load any settings that have been saved.
        loadingSettingsFromFile = True
        ShowStatusMessage "Checking for Settings file"
        Set tbUpdaterSettings = New clsSettings
        
        If tbUpdaterSettings.SettingsFileLoaded Then
            LoadSettingsIntoForm()
            ShowStatusMessage " - found and loaded", True
        Else
            ShowStatusMessage " - none found", True
        End If
        loadingSettingsFromFile = False
        
        ' this contiues to check for version info if the folders are valid
        If tbUpdaterSettings.SettingsFileLoaded And FoldersAreValid Then
            
            If chkLookForUpdateOnLaunch.Value Then
                ShowStatusMessage "Auto check for new version"
                chgLogs.GetNewerReleasedVersions(True)
                
                If chgLogs.tBVersionGap > 0 Then
                    ' there is at least 1 new version available
                    btnDownLoadZip.Caption = "Download version " & chgLogs.LatestVersion
                    ShowStatusMessage "Newest version available is " & chgLogs.LatestVersion
                Else
                    ShowStatusMessage "No newer version available"
                End If
            Else
                btnDownLoadZip.Caption = "Check for new version"
            End If
            
            EnableDownloadZipButton
            
        End If
        
        If FoldersAreValid Then
            ' get the version of twinBASIC that is current in the folder
            lblVersion.Caption = "version: " & GetCurrentTBVersion(txttBLocation.Text)
        End If
        
        ' enable or disable view log button
        btnViewLog.Enabled = fso.FileExists(App.Path & "\log.txt")
            
    End Sub
    
    Private Sub btnSelectDLfolder_Click()
        
        ' allow the user to select the folder to download the zip file
        Dim downloadFolder As String = askForFolder("Select download folder", txtDownloadTo.Text)
        
        If Len(downloadFolder) > 0 Then
            ' a folder was selected
            txtDownloadTo.Text = downloadFolder
        End If
    End Sub
    
    Private Sub btnSelectTBLocation_Click()
        
        ' allow the user to select the folder where twinBasic is location
        Dim twinBasicFolder As String = askForFolder("Select twinBASIC folder", txttBLocation.Text)
        
        If Len(twinBasicFolder) > 0 Then
            ' a folder was selected
            ' check for the twinBASIC exe in the selected folder
            If Not fso.FileExists(twinBasicFolder & "\twinbasic.exe") Then
                MsgBox("The folder selected does not contain twinBASIC", vbCritical)
                Exit Sub
            End If
            
            txttBLocation.Text = twinBasicFolder
            Dim temp As String = GetCurrentTBVersion(twinBasicFolder)
            
            If Val(temp) = 0 Then
                ' there was an issue retrieving the version of the local install 
                MsgBox(temp, vbCritical, "Unable to identify twinBASIC version")
                
            End If
        End If
    End Sub
    
    Private Sub btnDownLoadZip_Click()
       
        ' is the download button captioned to check for which version is available on GitHub
        If btnDownLoadZip.Caption = "Check for new version" Then
            ShowStatusMessage "Manual check for new version"
            GetCurrentTBVersion txttBLocation.Text
            chgLogs.GetNewerReleasedVersions
            
            ' the result of checking is that no new version is available at this time
            If chgLogs.versionCheckResult = "Latest version already installed" Then
                ShowStatusMessage " - none available", True
            Else
                FilltBChangeLog
                
                If chgLogs.InstalledtBVersion >= chgLogs.LatestVersion Then
                    ' no newer version is available
                    ShowStatusMessage " - no newer version available", True
                Else
                    ShowStatusMessage " - version  " & chgLogs.LatestVersion & "  available", True
                    btnDownLoadZip.Caption = "Download version " & chgLogs.LatestVersion
                End If
            End If
            
            Exit Sub  ' leave the sub
        End If
        
        ' use the version number to download the latest release
        ' example of the dowmload url: https://github.com/twinbasic/twinbasic/releases/download/beta-x-0641/twinBASIC_IDE_BETA_641.zip
        Dim newReleaseURL As String = "https://github.com/twinbasic/twinbasic/releases/download/beta-x-" & IIf(chgLogs.LatestVersion < 1000, "0" & CStr(chgLogs.LatestVersion), chgLogs.LatestVersion)
        Dim justTheFileName As String = "twinBASIC_IDE_BETA_" & chgLogs.LatestVersion & ".zip"
        Dim localZipFileName As String = txtDownloadTo.Text & justTheFileName
        Dim downloadTheZip As Boolean = True
        
        If fso.FileExists(localZipFileName) Then
            ' the zip has been downloaded already
            ShowStatusMessage "The zip exists in the download folder, redownload it?"
            downloadTheZip = MsgBox("The file '" & localZipFileName & "' already exists. Download it again? (if no, then the current file will be used)", vbYesNo, "Previously Downloaded") = vbYes
            ShowStatusMessage IIf(downloadTheZip, " - Yes", " - No"), True
            If downloadTheZip Then fso.DeleteFile(localZipFileName)
        End If

        If downloadTheZip Then
            ShowStatusMessage "Downloading twinBasic " & chgLogs.LatestVersion
            URLDownloadToFile 0, newReleaseURL & "/" & justTheFileName, localZipFileName, 0, 0
            ShowStatusMessage " - done ", True
        End If
        
        ProcessDownloadedZip localZipFileName
        
        ShowStatusMessage "process complete"

        ' after the latest has been downloaded, set the download button to a manual check
        btnDownLoadZip.Caption = "Check for new version"
        lblVersion.Caption = "version: " & chgLogs.LatestVersion
        DoEvents()
        
    End Sub
    
    Private Sub txtDownloadTo_Change()
        
        ' is the form reaf to download the zip file
        If fso.FolderExists(txtDownloadTo.Text) Then
            ' set the color to the normal background if the folders are valid
            txtDownloadTo.BackColor = "&HE8C59F"
            
            ' complete the path
            If Right(txtDownloadTo.Text, 1) <> "\" Then txtDownloadTo.Text += "\"
            tbUpdaterSettings.DownloadFolder = txtDownloadTo.Text
        Else
            ' indicate an invalid selection
            txtDownloadTo.BackColor = vbRed
        End If
        
    End Sub
    
    Private Sub txttBLocation_Change()
        
        ' is the form reaf to download the zip file
        If fso.FolderExists(txttBLocation.Text) Then
            ' set the color to the normal background if the folders are valid
            txttBLocation.BackColor = "&HE8C59F"
            
            ' complete the path
            If Right(txttBLocation.Text, 1) <> "\" Then txttBLocation.Text += "\"
            
            tbUpdaterSettings.twinBASICFolder = txttBLocation.Text
            
            ' retrieve the current version from the selected folder
            Dim temp As String = GetCurrentTBVersion(txttBLocation.Text)
            
            If Val(temp) = 0 Then
                ' indicate an invalid selection
                chgLogs.InstalledtBVersion = 0
                txttBLocation.BackColor = vbRed
                
                MsgBox(temp, vbOKOnly, "twinBASIC installed version check")
                                
            End If
        Else
            ' indicate an invalid selection
            chgLogs.InstalledtBVersion = 0
            txttBLocation.BackColor = vbRed
        End If
                
    End Sub
    
    Private Sub Form_Unload(Cancel As Integer)
                
        ' if the user wants the log to a hostory file, do it now
        If chkLog.Value = vbChecked Then
            ' write the on screen log to the log file as well
            WriteToLogFile
        End If
        
        ' has a setting been changed?
        If tbUpdaterSettings.SettingsChanged Then tbUpdaterSettings.SaveSettings()
        Set tbUpdaterSettings = Nothing
        
        Set fso = Nothing
    End Sub
    
    Private Sub optOpenFolder_Click()
        ' if just opening the folder, you can't launch the new twinBASIC
        chkStarttwinBASIC.Value = 0
        chkStarttwinBASIC.Enabled = False
        
        ' is the form reaf to download the zip file
        EnableDownloadZipButton
    End Sub
    
    Private Sub optOpenZip_Click()
        ' if just opening the zip, you can't launch the new twinBASIC
        chkStarttwinBASIC.Value = 0
        chkStarttwinBASIC.Enabled = False
        
        ' is the form reaf to download the zip file
        EnableDownloadZipButton
    End Sub
    
    Private Sub optInstallTB_Click()
        ' warn the user of the process involved in installing the latest twinBASIC version
        If Not loadingSettingsFromFile Then MsgBox("Selecting this option will delete the twinBASIC folder entirely and recreate it.", vbExclamation, "Warning")
    
        ' is the form ready to download the zip file
        EnableDownloadZipButton
        
    End Sub
    
    Private Sub txttBLocation_LostFocus()
            
        ' if the folder doesn't exist, create it?
        If Not fso.FolderExists(txttBLocation.Text) Then
            ' ask the user if the folder should be created (like a first time setup)
            If MsgBox("This folder doesn't exist. Should it be created?", vbYesNo, "twinBASIC Location") = vbYes Then
                On Error Resume Next
                fso.CreateFolder(txttBLocation.Text)
                If Not fso.FolderExists(txttBLocation.Text) Then
                    ShowStatusMessage("Unable to create the twinBASIC folder " & txttBLocation.Text & " as requested")()
                    MsgBox("Unable to create the folder. Try another folder name.", vbCritical, "Creation Error")
                    txttBLocation.SetFocus()
                Else
                    txttBLocation.BackColor = "&HE8C59F"
                    ShowStatusMessage("The twinBASIC folder " & txttBLocation.Text & " was created")
                    EnableDownloadZipButton
                End If
                On Error GoTo 0
            End If
        End If
        
    End Sub
     
    Private Sub ProcessDownloadedZip(zipLocation As String)
    
        ShowStatusMessage "Executing Post download action"
        
        ' depending on the selection, work with the zipfile downloaded
        Select Case OptionSelection
            Case 1
                ' download only - open the download folder
                ShowStatusMessage(" of opening the download folder", True)
                ShellExecute(0, "open", txtDownloadTo.Text, vbNullString, vbNullString, 1)
            Case 2
                ' open the zip file using the default zip client
                ShowStatusMessage(" of opening the zip file", True)
                ShellExecute(0, "open", zipLocation, vbNullString, vbNullString, 1)
            Case 3
                ShowStatusMessage(" of installing twinBASIC", True)
                InstallTwinBasic(zipLocation)
                
                ' does the user want to run twinBASIC after the update
                If chkStarttwinBASIC.Value = vbChecked Then
                    ShellExecute(0, "open", txttBLocation.Text & "\twinBASIC.exe", vbNullString, vbNullString, 1)
                End If
        End Select
        
        ShowStatusMessage "Post download action done"
    End Sub
    
    Private Sub SetupFlexGrid()
    
        With flgLog
            .Row = 0
            .TextMatrix(0, 0) = "Version"
            .TextMatrix(0, 1) = "Type"
            .TextMatrix(0, 2) = "Description"
            .ColWidth(0) = 700
            .ColWidth(1) = 1400
            .ColWidth(2) = 8500
        End With
        
    End Sub
    
    Private Sub btnViewLog_Click()
        
        ShowStatusMessage "Showing log form"
        frmViewLog.Show()
        
    End Sub
    
    Private Sub flgLog_Click()
        LogGridClick(flgLog)
    End Sub
    
    Private Sub chkLookForUpdateOnLaunch_Click()
        tbUpdaterSettings.CheckForNewVersionOnLoad = CInt(chkLookForUpdateOnLaunch.Value)
    End Sub
    
    Private Sub chkStarttwinBASIC_Click()
        tbUpdaterSettings.StarttwinBASICAfterUpdate = CInt(chkStarttwinBASIC.Value)
    End Sub
    
    Private Sub chkLog_Click()
        tbUpdaterSettings.LogActivity = CInt(chkLog.Value)
    End Sub
    
    Private Sub chkSaveSettings_Click()
        tbUpdaterSettings.SaveSettingsOnExit = CInt(chkSaveSettings.Value)
    End Sub
End Class